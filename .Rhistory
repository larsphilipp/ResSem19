}
else
{
# Run C5.0 Sampling
int   <- samplingC5(intervention,interventionTarget, sampleSize, typeOfImportance)
noInt <- samplingC5(noIntervention, noInterventionTarget, sampleSize, typeOfImportance)
welchSDDir <- t.test(int$ImpSDDir, noInt$ImpSDDir)
welchSD    <- t.test(int$ImpSD, noInt$ImpSD)
}
# Output of Object
results <- c(IntTrainError = int$trainError, IntTestError = int$testError, IntTestPValue = int$tTestTestSet, IntVarImp = int$varImp,
NoIntTrainError = noInt$trainError, NoIntTestError = noInt$testError, NoIntTestPValue = noInt$tTestTestSet, NoIntVarImp = noInt$varImp,
WelchSDDirPValue = welchSDDir$p.value,
WelchSDPValue = welchSD$p.value)
attr(results, "class") <- "interventionC5"
results
}
dependentVariable
typeOfImportance
# Intervention
InterventionCurrentSMI_Fx1.20 <- interventionC5(allData[currentSMIColumns], dependentVariable, 0.8333, sampleSize, "FX", typeOfImportance)
InterventionCurrentSMI_Fx1.20
typeOfImportance <- "splits" # splits usage
# Intervention
InterventionCurrentSMI_Fx1.20 <- interventionC5(allData[currentSMIColumns], dependentVariable, 0.8333, sampleSize, "FX", typeOfImportance)
InterventionCurrentSMI_Fx1.20
currentSMIColumns
quantile(allData["SDofDomBanks"])
quantile(allData[,"SDofDomBanks"])
quantile(allData[,"SDofDomBanks"],3)
quantile(allData[,"SDofDomBanks"],0.75)
InterventionCurrentSMI_Sd75 <- interventionC5(allData[currentSMIColumns], dependentVariable, 3712, sampleSize, "nominalSD", typeOfImportance)
InterventionCurrentSMI_Sd75
typeOfImportance <- "usage" # splits usage
InterventionCurrentSMI_Sd75 <- interventionC5(allData[currentSMIColumns], dependentVariable, 3712, sampleSize, "nominalSD", typeOfImportance)
InterventionCurrentSMI_Sd75
# Titel:        C5.0 Decision Tree Analysis: Effect of SNB Policy on SMI Mid (2011 - 2018)
# Course:       Financial Economics Reserach Seminar
# Institute:    University of St. Gallen
# Authors:      Julian Woessner, Lars Stauffenegger
# Date:         March 2019
# Version:      1.0
# Description:  This File contains the plot of the index and the SD and the CHF/EUR for the research paper
# installing packages
library(PerformanceAnalytics)
library(AER)
library(C50)
library(Hmisc)
library(jtools)
library(huxtable)
library(zoo)
library(ggplot2)
library(psych)
library(xtable)
# setting working directory
getwd()
#setwd("C:/Users/Lars Stauffenegger/Documents/MBF Unisg/Research Seminar/ResSem19")
setwd("/Users/julianwossner/Desktop/MBF/Vorlesungen_2._Semester/Research_Seminar_Financial_Economics/Daten/ResSem19")
#setwd("C:/Users/LST/Documents/Uni/Research Seminar/ResSem19")
dataind08 <- read.csv2("Data_for_import_Indices_from_08.csv", header = TRUE , sep = ";") #reading in data
# Titel:        C5.0 Decision Tree Analysis: Effect of SNB Policy on SMI Mid (2011 - 2018)
# Course:       Financial Economics Reserach Seminar
# Institute:    University of St. Gallen
# Authors:      Julian Woessner, Lars Stauffenegger
# Date:         March 2019
# Version:      1.0
# Description:  This File contains the plot of the index and the SD and the CHF/EUR for the research paper
# installing packages
library(PerformanceAnalytics)
library(AER)
library(C50)
library(Hmisc)
library(jtools)
library(huxtable)
library(zoo)
library(ggplot2)
library(psych)
library(xtable)
# setting working directory
getwd()
#setwd("C:/Users/Lars Stauffenegger/Documents/MBF Unisg/Research Seminar/ResSem19")
setwd("/Users/julianwossner/Desktop/MBF/Vorlesungen_2._Semester/Research_Seminar_Financial_Economics/Daten/ResSem19")
#setwd("C:/Users/LST/Documents/Uni/Research Seminar/ResSem19")
dataind08 <- read.csv2("Data_for_import_Indices_from_08.csv", header = TRUE , sep = ";") #reading in data
View(dataind08)
View(dataind08)
dataind08 <- read.csv2("Data_for_import_Indices_from_08.csv", header = TRUE , sep = ",") #reading in data
View(dataind08)
dataind08 <- transform(dataind08, Date = as.Date(Date, format = "%Y-%m-%d") ,SMI = as.numeric(as.character(SMI)), SDofDomBanks = as.numeric(as.character(SDofDomBanks)),
SPIEX = as.numeric(as.character(SPIEX)), SMIMid = as.numeric(as.character(SMIMid)), Gov10yr = as.numeric(as.character(Gov10yr)),
Gov3yr = as.numeric(as.character(Gov3yr)), Libor3M_CHF = as.numeric(as.character(Libor3M_CHF)), CHFUSD = as.numeric(as.character(CHFUSD)),
CHFEUR = as.numeric(as.character(CHFEUR))) # Converting numbers into numeric format and date column to date format
dataind08 <- read.csv2("Data_for_import_Indices_from_08.csv", header = TRUE , sep = ",") #reading in data
dataind08 <- transform(dataind08, Date = as.Date(Date, format = "%d-%m-%Y") ,SMI = as.numeric(as.character(SMI)), SDofDomBanks = as.numeric(as.character(SDofDomBanks)),
SPIEX = as.numeric(as.character(SPIEX)), SMIMid = as.numeric(as.character(SMIMid)), Gov10yr = as.numeric(as.character(Gov10yr)),
Gov3yr = as.numeric(as.character(Gov3yr)), Libor3M_CHF = as.numeric(as.character(Libor3M_CHF)), CHFUSD = as.numeric(as.character(CHFUSD)),
CHFEUR = as.numeric(as.character(CHFEUR))) # Converting numbers into numeric format and date column to date format
dataind08 <- read.csv2("Data_for_import_Indices_from_08.csv", header = TRUE , sep = ",") #reading in data
dataind08 <- transform(dataind08, Date = as.Date(Date, format = "%d-%m-%y") ,SMI = as.numeric(as.character(SMI)), SDofDomBanks = as.numeric(as.character(SDofDomBanks)),
SPIEX = as.numeric(as.character(SPIEX)), SMIMid = as.numeric(as.character(SMIMid)), Gov10yr = as.numeric(as.character(Gov10yr)),
Gov3yr = as.numeric(as.character(Gov3yr)), Libor3M_CHF = as.numeric(as.character(Libor3M_CHF)), CHFUSD = as.numeric(as.character(CHFUSD)),
CHFEUR = as.numeric(as.character(CHFEUR))) # Converting numbers into numeric format and date column to date format
dataind08 <- read.csv2("Data_for_import_Indices_from_08.csv", header = TRUE , sep = ",") #reading in data
dataind08 <- transform(dataind08, Date = as.Date(Date, format = "%d.%m.%y") ,SMI = as.numeric(as.character(SMI)), SDofDomBanks = as.numeric(as.character(SDofDomBanks)),
SPIEX = as.numeric(as.character(SPIEX)), SMIMid = as.numeric(as.character(SMIMid)), Gov10yr = as.numeric(as.character(Gov10yr)),
Gov3yr = as.numeric(as.character(Gov3yr)), Libor3M_CHF = as.numeric(as.character(Libor3M_CHF)), CHFUSD = as.numeric(as.character(CHFUSD)),
CHFEUR = as.numeric(as.character(CHFEUR))) # Converting numbers into numeric format and date column to date format
dataind08 <- read.csv2("Data_for_import_Indices_from_08.csv", header = TRUE , sep = ",") #reading in data
dataind08 <- transform(dataind08, Date = as.Date(Date, format = "%d/%m/%y") ,SMI = as.numeric(as.character(SMI)), SDofDomBanks = as.numeric(as.character(SDofDomBanks)),
SPIEX = as.numeric(as.character(SPIEX)), SMIMid = as.numeric(as.character(SMIMid)), Gov10yr = as.numeric(as.character(Gov10yr)),
Gov3yr = as.numeric(as.character(Gov3yr)), Libor3M_CHF = as.numeric(as.character(Libor3M_CHF)), CHFUSD = as.numeric(as.character(CHFUSD)),
CHFEUR = as.numeric(as.character(CHFEUR))) # Converting numbers into numeric format and date column to date format
dataind08 <- read.csv2("Data_for_import_Indices_from_08.csv", header = TRUE , sep = ",") #reading in data
dataind08 <- transform(dataind08, Date = as.Date(Date, format = "%d/%m/%Y") ,SMI = as.numeric(as.character(SMI)), SDofDomBanks = as.numeric(as.character(SDofDomBanks)),
SPIEX = as.numeric(as.character(SPIEX)), SMIMid = as.numeric(as.character(SMIMid)), Gov10yr = as.numeric(as.character(Gov10yr)),
Gov3yr = as.numeric(as.character(Gov3yr)), Libor3M_CHF = as.numeric(as.character(Libor3M_CHF)), CHFUSD = as.numeric(as.character(CHFUSD)),
CHFEUR = as.numeric(as.character(CHFEUR))) # Converting numbers into numeric format and date column to date format
View(dataind08)
RetSMI <- diff(log(dataind08$SMI))
ChgSD <-  diff(dataind08$SDofDomBanks)/dataind08$SDofDomBanks[-length(dataind08$SDofDomBanks)] # Sight deposits of dom. Banks
CHFEUR <- dataind08$CHFEUR
CHFEUR <- 1/dataind08$CHFEUR
Date <- dataind08$Date
Data <- cbind(Date, RetSMI, ChgSD, CHFEUR)
View(Data)
Data <- data.frame(cbind(Date, RetSMI, ChgSD, CHFEUR))
View(Data)
Data <- data.frame(cbind(as.date(Date), RetSMI, ChgSD, CHFEUR))
Data <- data.frame(cbind(as.Date(Date), RetSMI, ChgSD, CHFEUR))
dataind08 <- read.csv2("Data_for_import_Indices_from_08.csv", header = TRUE , sep = ",") #reading in data
dataind08 <- transform(dataind08, Date = as.Date(Date, format = "%d/%m/%Y") ,SMI = as.numeric(as.character(SMI)), SDofDomBanks = as.numeric(as.character(SDofDomBanks)),
SPIEX = as.numeric(as.character(SPIEX)), SMIMid = as.numeric(as.character(SMIMid)), Gov10yr = as.numeric(as.character(Gov10yr)),
Gov3yr = as.numeric(as.character(Gov3yr)), Libor3M_CHF = as.numeric(as.character(Libor3M_CHF)), CHFUSD = as.numeric(as.character(CHFUSD)),
CHFEUR = as.numeric(as.character(CHFEUR))) # Converting numbers into numeric format and date column to date format
RetSMI <- diff(log(dataind08$SMI))[-c(1:2),]
dataind08 <- read.csv2("Data_for_import_Indices_from_08.csv", header = TRUE , sep = ",") #reading in data
dataind08 <- transform(dataind08, Date = as.Date(Date, format = "%d/%m/%Y") ,SMI = as.numeric(as.character(SMI)), SDofDomBanks = as.numeric(as.character(SDofDomBanks)),
SPIEX = as.numeric(as.character(SPIEX)), SMIMid = as.numeric(as.character(SMIMid)), Gov10yr = as.numeric(as.character(Gov10yr)),
Gov3yr = as.numeric(as.character(Gov3yr)), Libor3M_CHF = as.numeric(as.character(Libor3M_CHF)), CHFUSD = as.numeric(as.character(CHFUSD)),
CHFEUR = as.numeric(as.character(CHFEUR))) # Converting numbers into numeric format and date column to date format
dataind08$RetSMI <- diff(log(dataind08$SMI))
View(dataind08)
dataind08 <- dataind08[-1,-c(2:10)]
dataind08 <- dataind08[-1,-c(3:10)]
dataind08 <- dataind08[-1,-c(3:10)]
dataind08 <- read.csv2("Data_for_import_Indices_from_08.csv", header = TRUE , sep = ",") #reading in data
dataind08 <- transform(dataind08, Date = as.Date(Date, format = "%d/%m/%Y") ,SMI = as.numeric(as.character(SMI)), SDofDomBanks = as.numeric(as.character(SDofDomBanks)),
SPIEX = as.numeric(as.character(SPIEX)), SMIMid = as.numeric(as.character(SMIMid)), Gov10yr = as.numeric(as.character(Gov10yr)),
Gov3yr = as.numeric(as.character(Gov3yr)), Libor3M_CHF = as.numeric(as.character(Libor3M_CHF)), CHFUSD = as.numeric(as.character(CHFUSD)),
CHFEUR = as.numeric(as.character(CHFEUR))) # Converting numbers into numeric format and date column to date format
RetSMI <- diff(log(dataind08$SMI))
ChgSD <-  diff(dataind08$SDofDomBanks)/dataind08$SDofDomBanks[-length(dataind08$SDofDomBanks)] # Sight deposits of dom. Banks
CHFEUR <- 1/dataind08$CHFEUR
Date <- dataind08$Date
Data <- dataind08[-1,-c(3:10)]
View(Data)
Data <- dataind08[,-c(3:10)]
View(dataind08)
Data <- dataind08[,-c(2:9)]
Data <- dataind08[,-c(2:9)][-1,]
View(Data)
Data$RetSMI <- RetSMI
Data$ChgSD <- ChgSD
View(Data)
Data <- Data[-1, -c(570:576)]
Data <- dataind08[,-c(2:9)][-1,]
Data$RetSMI <- RetSMI
Data$ChgSD <- ChgSD
Data <- Data[-c(1, 570:576)]
View(Data)
Data <- dataind08[,-c(2:9)][-1,]
Data$RetSMI <- RetSMI
Data$ChgSD <- ChgSD
Data <- Data[-c(1, 570:576),]
View(Data)
Data <- dataind08[,-c(2:9)][-1,]
Data$RetSMI <- RetSMI
Data$ChgSD <- ChgSD
Data <- Data[-c(1, 569:576),]
View(Data)
Data$RetSMI[1] <- 100
View(Data)
Data$ChgSD[1] <- 100
View(Data)
nrow(Data$RetSMI
nrow(Data$RetSMI)
nrow(Data
nrow(Data)
For(i in 2:nrow(Data){
for (i in 2:nrow(Data){
RetSMI <- diff(log(dataind08$SMI))
ChgSD <-  diff(dataind08$SDofDomBanks)/dataind08$SDofDomBanks[-length(dataind08$SDofDomBanks)] # Sight deposits of dom. Banks
CHFEUR <- 1/dataind08$CHFEUR
Date <- dataind08$Date
Data <- dataind08[,-c(2:9)][-1,]
Data$RetSMI <- RetSMI
Data$ChgSD <- ChgSD
Data <- Data[-c(1, 569:576),]
Data$RetSMI[1] <- 100
Data$ChgSD[1] <- 100
for (i in 2:nrow(Data)){
Data$RetSMI[i] <- (1+Data$RetSMI[i-1])*Data$RetSMI[i]
Data$ChgSD[i] <- (1+Data$ChgSD[i-1])*Data$ChgSD[i]
}
View(Data)
RetSMI <- diff(log(dataind08$SMI))
ChgSD <-  diff(dataind08$SDofDomBanks)/dataind08$SDofDomBanks[-length(dataind08$SDofDomBanks)] # Sight deposits of dom. Banks
CHFEUR <- 1/dataind08$CHFEUR
Date <- dataind08$Date
Data <- dataind08[,-c(2:9)][-1,]
Data$RetSMI <- RetSMI
Data$ChgSD <- ChgSD
Data <- Data[-c(1, 569:576),]
Data$RetSMI[1] <- 100
Data$ChgSD[1] <- 100
for (i in 2:nrow(Data)){
Data$RetSMI[i] <- (1+Data$RetSMI[i])*Data$RetSMI[i-1]
Data$ChgSD[i] <- (1+Data$ChgSD[i])*Data$ChgSD[i-1]
}
View(Data)
Plot <- ggplot(data = Data, aes(x = Date)) + geom_line(aes(y = RetSMI, colour = "Swiss Market Index")) + geom_line(aes(y = ChgSD, colour = "Sight Deposits of Domestic Banks"))+
scale_y_continuous(sec.axis = sec.axis(~.100), name = "SMI index development (indexed: 15.02.2008 = 100)") +
scale_colour_manual(values = c("blue", "red"))+ labs(y = "Sight Deposits growth (indexed: 15.02.2008 = 100)",
x = "Date",
colour = "Variable") + theme(legend.position = c(0.8,0.9))
Plot <- ggplot(data = Data, aes(x = Date)) + geom_line(aes(y = RetSMI, colour = "Swiss Market Index")) + geom_line(aes(y = ChgSD, colour = "Sight Deposits of Domestic Banks"))+
scale_y_continuous(sec.axis = sec_axis(~.100), name = "SMI index development (indexed: 15.02.2008 = 100)") +
scale_colour_manual(values = c("blue", "red"))+ labs(y = "Sight Deposits growth (indexed: 15.02.2008 = 100)",
x = "Date",
colour = "Variable") + theme(legend.position = c(0.8,0.9))
Plot
Plot <- ggplot(data = Data, aes(x = Date)) + geom_line(aes(y = RetSMI, colour = "Swiss Market Index")) + geom_line(aes(y = ChgSD, colour = "Sight Deposits of Domestic Banks"))+
scale_y_continuous(sec.axis = sec_axis(~./100), name = "SMI index development (indexed: 15.02.2008 = 100)") +
scale_colour_manual(values = c("blue", "red"))+ labs(y = "Sight Deposits growth (indexed: 15.02.2008 = 100)",
x = "Date",
colour = "Variable") + theme(legend.position = c(0.8,0.9))
Plot
Plot <- ggplot(data = Data, aes(x = Date)) + geom_line(aes(y = RetSMI, colour = "Swiss Market Index")) + geom_line(aes(y = ChgSD, colour = "Sight Deposits of Domestic Banks"))+
scale_y_continuous(sec.axis = sec_axis(~./100), name = "SMI index development (indexed: 15.02.2008 = 100)") +
scale_colour_manual(values = c("blue", "red"))+ labs(y = "Sight Deposits growth (indexed: 15.02.2008 = 100)",
x = "Date",
colour = "Variable") + theme(legend.position = c(0.1,0.1))
Plot
Plot <- ggplot(data = Data, aes(x = Date)) + geom_line(aes(y = RetSMI, colour = "Swiss Market Index")) + geom_line(aes(y = ChgSD, colour = "Sight Deposits of Domestic Banks"))+
scale_y_continuous(sec.axis = sec_axis(~./100), name = "SMI index development (indexed: 15.02.2008 = 100)") +
scale_colour_manual(values = c("blue", "red"))+ labs(y = "Sight Deposits growth (indexed: 15.02.2008 = 100)",
x = "Date",
colour = "Variable") + theme(legend.position = c(0.8,0.1))
Plot
Plot <- ggplot(data = Data, aes(x = Date)) + geom_line(aes(y = RetSMI, colour = "Swiss Market Index")) + geom_line(aes(y = ChgSD, colour = "Sight Deposits of Domestic Banks"))+
scale_y_continuous(sec.axis = sec_axis(~./100), name = "SMI index development (indexed: 15.02.2008 = 100)") +
scale_colour_manual(values = c("blue", "red"))+ labs(y = "Sight Deposits growth (indexed: 15.02.2008 = 100)",
x = "Date",
colour = "Variable") + theme(legend.position = c(0.1,0.8))
Plot
Plot <- ggplot(data = Data, aes(x = Date)) + geom_line(aes(y = RetSMI, colour = "Swiss Market Index")) + geom_line(aes(y = ChgSD, colour = "Sight Deposits of Domestic Banks"))+
scale_y_continuous(sec.axis = sec_axis(~./100), name = "SMI index development (indexed: 15.02.2008 = 100)") +
scale_colour_manual(values = c("blue", "red"))+ labs(y = "Sight Deposits growth (indexed: 15.02.2008 = 100)",
x = "Date",
colour = "Variable") + theme(legend.position = c(0.3,0.9))
Plot
Plot <- ggplot(data = Data, aes(x = Date)) + geom_line(aes(y = RetSMI, colour = "Swiss Market Index")) + geom_line(aes(y = ChgSD, colour = "Sight Deposits of Domestic Banks"))+
scale_y_continuous(sec.axis = sec_axis(~./100), name = "SMI index development (indexed: 15.02.2008 = 100)") +
scale_colour_manual(values = c("blue", "red"))+ labs(y = "Sight Deposits growth (indexed: 15.02.2008 = 100)",
x = "Date",
colour = "Variable") + theme(legend.position = c(0.2,0.9))
Plot
Plot <- ggplot(data = Data, aes(x = Date)) + geom_line(aes(y = RetSMI, colour = "Swiss Market Index")) + geom_line(aes(y = ChgSD, colour = "Sight Deposits of Domestic Banks"))+
scale_y_continuous(sec.axis = sec_axis(~./100), name = "SMI index development (indexed: 15.02.2008 = 100)") +
scale_colour_manual(values = c("blue", "red"))+ labs(y = "Sight Deposits growth (indexed: 15.02.2008 = 100)",
x = "Date",
colour = "Variable") + theme(legend.position = c(0.15,0.9))
Plot
Plot <- ggplot(data = Data, aes(x = Date)) + geom_line(aes(y = RetSMI, colour = "Swiss Market Index")) + geom_line(aes(y = ChgSD, colour = "Sight Deposits of Domestic Banks"))+
scale_y_continuous(sec.axis = sec_axis(~./1000), name = "SMI index development (indexed: 15.02.2008 = 100)") +
scale_colour_manual(values = c("blue", "red"))+ labs(y = "Sight Deposits growth (indexed: 15.02.2008 = 100)",
x = "Date",
colour = "Variable") + theme(legend.position = c(0.15,0.9))
Plot
Plot <- ggplot(data = Data, aes(x = Date)) + geom_line(aes(y = RetSMI, colour = "Swiss Market Index")) + geom_line(aes(y = ChgSD, colour = "Sight Deposits of Domestic Banks"))+
scale_y_continuous(sec.axis = sec_axis(~./1000), name = "Sight Deposits growth (indexed: 15.02.2008 = 100)") +
scale_colour_manual(values = c("blue", "red"))+ labs(y = "SMI index development (indexed: 15.02.2008 = 100)",
x = "Date",
colour = "Variable") + theme(legend.position = c(0.15,0.9))
Plot
Plot <- ggplot(data = Data, aes(x = Date)) + geom_line(aes(y = RetSMI/1000, colour = "Swiss Market Index")) + geom_line(aes(y = ChgSD, colour = "Sight Deposits of Domestic Banks"))+
scale_y_continuous(sec.axis = sec_axis(~./1000), name = "Sight Deposits growth (indexed: 15.02.2008 = 100)") +
scale_colour_manual(values = c("blue", "red"))+ labs(y = "SMI index development (indexed: 15.02.2008 = 100)",
x = "Date",
colour = "Variable") + theme(legend.position = c(0.15,0.9))
Plot
Plot <- ggplot(data = Data, aes(x = Date)) + geom_line(aes(y = RetSMI, colour = "Swiss Market Index")) + geom_line(aes(y = ChgSD, colour = "Sight Deposits of Domestic Banks"))+
scale_y_continuous(sec.axis = sec_axis(~./1000), name = "Sight Deposits growth (indexed: 15.02.2008 = 100)") +
scale_colour_manual(values = c("blue", "red"))+ labs(y = "SMI index development (indexed: 15.02.2008 = 100)",
x = "Date",
colour = "Variable") + theme(legend.position = c(0.15,0.9))
Plot <- ggplot(data = Data, aes(x = Date)) + geom_line(aes(y = RetSMI*1000, colour = "Swiss Market Index")) + geom_line(aes(y = ChgSD, colour = "Sight Deposits of Domestic Banks"))+
scale_y_continuous(sec.axis = sec_axis(~./1000), name = "Sight Deposits growth (indexed: 15.02.2008 = 100)") +
scale_colour_manual(values = c("blue", "red"))+ labs(y = "SMI index development (indexed: 15.02.2008 = 100)",
x = "Date",
colour = "Variable") + theme(legend.position = c(0.15,0.9))
Plot
Plot <- ggplot(data = Data, aes(x = Date)) + geom_line(aes(y = RetSMI*100, colour = "Swiss Market Index")) + geom_line(aes(y = ChgSD, colour = "Sight Deposits of Domestic Banks"))+
scale_y_continuous(sec.axis = sec_axis(~./1000), name = "Sight Deposits growth (indexed: 15.02.2008 = 100)") +
scale_colour_manual(values = c("blue", "red"))+ labs(y = "SMI index development (indexed: 15.02.2008 = 100)",
x = "Date",
colour = "Variable") + theme(legend.position = c(0.15,0.9))
Plot
Plot <- ggplot(data = Data, aes(x = Date)) + geom_line(aes(y = RetSMI*100, colour = "Swiss Market Index")) + geom_line(aes(y = ChgSD, colour = "Sight Deposits of Domestic Banks"))+
scale_y_continuous(sec.axis = sec_axis(~./100), name = "Sight Deposits growth (indexed: 15.02.2008 = 100)") +
scale_colour_manual(values = c("blue", "red"))+ labs(y = "SMI index development (indexed: 15.02.2008 = 100)",
x = "Date",
colour = "Variable") + theme(legend.position = c(0.15,0.9))
Plot
Plot <- ggplot(data = Data, aes(x = Date)) + geom_line(aes(y = RetSMI, colour = "Swiss Market Index")) + geom_line(aes(y = ChgSD, colour = "Sight Deposits of Domestic Banks"))+
scale_y_continuous(sec.axis = sec_axis(~./100), name = "Sight Deposits growth (indexed: 15.02.2008 = 100)") +
scale_colour_manual(values = c("blue", "red"))+ labs(y = "SMI index development (indexed: 15.02.2008 = 100)",
x = "Date",
colour = "Variable") + theme(legend.position = c(0.15,0.9))
Plot
Plot <- ggplot(data = Data, aes(x = Date)) + geom_line(aes(y = RetSMI, colour = "Swiss Market Index")) + geom_line(aes(y = ChgSD, colour = "Sight Deposits of Domestic Banks"))+
scale_y_continuous(sec.axis = sec_axis(~./10), name = "Sight Deposits growth (indexed: 15.02.2008 = 100)") +
scale_colour_manual(values = c("blue", "red"))+ labs(y = "SMI index development (indexed: 15.02.2008 = 100)",
x = "Date",
colour = "Variable") + theme(legend.position = c(0.15,0.9))
Plot
Plot <- ggplot(data = Data, aes(x = Date)) + geom_line(aes(y = RetSMI*10, colour = "Swiss Market Index")) + geom_line(aes(y = ChgSD, colour = "Sight Deposits of Domestic Banks"))+
scale_y_continuous(sec.axis = sec_axis(~./10), name = "Sight Deposits growth (indexed: 15.02.2008 = 100)") +
scale_colour_manual(values = c("blue", "red"))+ labs(y = "SMI index development (indexed: 15.02.2008 = 100)",
x = "Date",
colour = "Variable") + theme(legend.position = c(0.15,0.9))
Plot
Plot <- ggplot(data = Data, aes(x = Date)) + geom_line(aes(y = RetSMI*10, colour = "Swiss Market Index")) + geom_line(aes(y = ChgSD, colour = "Sight Deposits of Domestic Banks"))+
scale_y_continuous(sec.axis = sec_axis(~./5), name = "Sight Deposits growth (indexed: 15.02.2008 = 100)") +
scale_colour_manual(values = c("blue", "red"))+ labs(y = "SMI index development (indexed: 15.02.2008 = 100)",
x = "Date",
colour = "Variable") + theme(legend.position = c(0.15,0.9))
Plot
Plot <- ggplot(data = Data, aes(x = Date)) + geom_line(aes(y = RetSMI*50, colour = "Swiss Market Index")) + geom_line(aes(y = ChgSD, colour = "Sight Deposits of Domestic Banks"))+
scale_y_continuous(sec.axis = sec_axis(~./5), name = "Sight Deposits growth (indexed: 15.02.2008 = 100)") +
scale_colour_manual(values = c("blue", "red"))+ labs(y = "SMI index development (indexed: 15.02.2008 = 100)",
x = "Date",
colour = "Variable") + theme(legend.position = c(0.15,0.9))
Plot
Plot <- ggplot(data = Data, aes(x = Date)) + geom_line(aes(y = RetSMI*50, colour = "Swiss Market Index")) + geom_line(aes(y = ChgSD, colour = "Sight Deposits of Domestic Banks"))+
scale_y_continuous(sec.axis = sec_axis(~./200), name = "Sight Deposits growth (indexed: 15.02.2008 = 100)") +
scale_colour_manual(values = c("blue", "red"))+ labs(y = "SMI index development (indexed: 15.02.2008 = 100)",
x = "Date",
colour = "Variable") + theme(legend.position = c(0.15,0.9))
Plot
Plot <- ggplot(data = Data, aes(x = Date)) + geom_line(aes(y = RetSMI*50, colour = "Swiss Market Index")) + geom_line(aes(y = ChgSD, colour = "Sight Deposits of Domestic Banks"))+
scale_y_continuous(sec.axis = sec_axis(~./20), name = "Sight Deposits growth (indexed: 15.02.2008 = 100)") +
scale_colour_manual(values = c("blue", "red"))+ labs(y = "SMI index development (indexed: 15.02.2008 = 100)",
x = "Date",
colour = "Variable") + theme(legend.position = c(0.15,0.9))
Plot
Plot <- ggplot(data = Data, aes(x = Date)) + geom_line(aes(y = RetSMI*20, colour = "Swiss Market Index")) + geom_line(aes(y = ChgSD, colour = "Sight Deposits of Domestic Banks"))+
scale_y_continuous(sec.axis = sec_axis(~./20), name = "Sight Deposits growth (indexed: 15.02.2008 = 100)") +
scale_colour_manual(values = c("blue", "red"))+ labs(y = "SMI index development (indexed: 15.02.2008 = 100)",
x = "Date",
colour = "Variable") + theme(legend.position = c(0.15,0.9))
Plot
Plot <- ggplot(data = Data, aes(x = Date)) + geom_line(aes(y = RetSMI*20, colour = "Swiss Market Index")) + geom_line(aes(y = ChgSD, colour = "Sight Deposits of Domestic Banks"))+
scale_y_continuous(sec.axis = sec_axis(~./30), name = "Sight Deposits growth (indexed: 15.02.2008 = 100)") +
scale_colour_manual(values = c("blue", "red"))+ labs(y = "SMI index development (indexed: 15.02.2008 = 100)",
x = "Date",
colour = "Variable") + theme(legend.position = c(0.15,0.9))
Plot <- ggplot(data = Data, aes(x = Date)) + geom_line(aes(y = RetSMI*20, colour = "Swiss Market Index")) + geom_line(aes(y = ChgSD, colour = "Sight Deposits of Domestic Banks"))+
scale_y_continuous(sec.axis = sec_axis(~./20), name = "Sight Deposits growth (indexed: 15.02.2008 = 100)") +
scale_colour_manual(values = c("blue", "red"))+ labs(y = "SMI index development (indexed: 15.02.2008 = 100)",
x = "Date",
colour = "Variable") + theme(legend.position = c(0.15,0.9))
Plot
Plot <- ggplot(data = Data, aes(x = Date)) + geom_line(aes(y = RetSMI*20, colour = "Swiss Market Index")) + geom_line(aes(y = ChgSD, colour = "Sight Deposits of Domestic Banks"))+
#(sec.axis = sec_axis(~.), name = "Sight Deposits growth (indexed: 15.02.2008 = 100)") +
scale_y_log10()+
scale_colour_manual(values = c("blue", "red"))+ labs(y = "SMI index development (indexed: 15.02.2008 = 100)",
x = "Date",
colour = "Variable") + theme(legend.position = c(0.15,0.9))
Plot
Plot <- ggplot(data = Data, aes(x = Date)) + geom_line(aes(y = RetSMI, colour = "Swiss Market Index")) + geom_line(aes(y = ChgSD, colour = "Sight Deposits of Domestic Banks"))+
#(sec.axis = sec_axis(~.), name = "Sight Deposits growth (indexed: 15.02.2008 = 100)") +
scale_y_log10()+
scale_colour_manual(values = c("blue", "red"))+ labs(y = "Index (15.02.2008 = 100)",
x = "Date",
colour = "Variable") + theme(legend.position = c(0.15,0.9))
Plot
Plot <- ggplot(data = Data, aes(x = Date)) + geom_line(aes(y = RetSMI, colour = "Swiss Market Index")) + geom_line(aes(y = ChgSD, colour = "Sight Deposits of Domestic Banks"))+
#(sec.axis = sec_axis(~.), name = "Sight Deposits growth (indexed: 15.02.2008 = 100)") +
scale_y_log10()+
scale_colour_manual(values = c("blue", "red"))+ labs(y = "Index (15.02.2008 = 100)",
x = "Date",
colour = "Variable") + theme(legend.position = c(0.9,0.5))
Plot
Plot <- ggplot(data = Data, aes(x = Date)) + geom_line(aes(y = RetSMI, colour = "Swiss Market Index")) + geom_line(aes(y = ChgSD, colour = "Sight Deposits of Domestic Banks"))+
#(sec.axis = sec_axis(~.), name = "Sight Deposits growth (indexed: 15.02.2008 = 100)") +
scale_y_log10()+
scale_colour_manual(values = c("blue", "red"))+ labs(y = "Index (15.02.2008 = 100)",
x = "Date",
colour = "Variable") + theme(legend.position = c(0.8,0.5))
Plot
Plot <- ggplot(data = Data, aes(x = Date)) + geom_line(aes(y = RetSMI, colour = "Swiss Market Index")) + geom_line(aes(y = ChgSD, colour = "Sight Deposits of Domestic Banks"))+
#(sec.axis = sec_axis(~.), name = "Sight Deposits growth (indexed: 15.02.2008 = 100)") +
scale_y_log10()+
scale_colour_manual(values = c("blue", "red"))+ labs(y = "Index (15.02.2008 = 100)",
x = "Date",
colour = "Variable") + theme(legend.position = c(0.82,0.5))
Plot
Plot <- ggplot(data = Data, aes(x = Date)) + geom_line(aes(y = RetSMI, colour = "Swiss Market Index")) + geom_line(aes(y = ChgSD, colour = "Sight Deposits of Domestic Banks"))+
#(sec.axis = sec_axis(~.), name = "Sight Deposits growth (indexed: 15.02.2008 = 100)") +
scale_y_log10()+
scale_colour_manual(values = c("blue", "red"))+ labs(y = "logIndex (15.02.2008 = 100)",
x = "Date",
colour = "Variable") + theme(legend.position = c(0.82,0.5))
PlotFX <- ggplot(data=Data, aes(x= Date)) + geom_line(aes(y = CHFEUR, cour = "CHF/EUR Exchange rate"))
PlotFX <- ggplot(data=Data, aes(x= Date)) + geom_line(aes(y = CHFEUR, colour = "CHF/EUR Exchange rate"))
PlotFX
PlotFX <- ggplot(data=Data, aes(x= Date)) + geom_line(aes(y = 1/CHFEUR, colour = "CHF/EUR Exchange rate"))+
scale_colour_manual(values = c("green"))+ labs(y = "Exchange rate CHF/EUR",
x = "Date",
colour = "Variable") + theme(legend.position = c(0.82,0.5))
PlotFX
PlotIndex <- ggplot(data = Data, aes(x = Date)) + geom_line(aes(y = RetSMI, colour = "Swiss Market Index")) + geom_line(aes(y = ChgSD, colour = "Sight Deposits of Domestic Banks"))+
#(sec.axis = sec_axis(~.), name = "Sight Deposits growth (indexed: 15.02.2008 = 100)") +
scale_y_log10()+
scale_colour_manual(values = c("blue", "red"))+ labs(y = "logIndex (15.02.2008 = 100)",
x = "Date",
colour = "Variable") + theme(legend.position = c(0.9,0.8))
PlotFX <- ggplot(data=Data, aes(x= Date)) + geom_line(aes(y = 1/CHFEUR, colour = "CHF/EUR Exchange rate"))+
scale_colour_manual(values = c("green"))+ labs(y = "Exchange rate CHF/EUR", x = "Date", colour = "Variable")+ theme(legend.position = c(0.8,0.9))
PlotFX
PlotFX <- ggplot(data=Data, aes(x= Date)) + geom_line(aes(y = 1/CHFEUR, colour = "CHF/EUR Exchange rate"))+
scale_colour_manual(values = c("green"))+ labs(y = "Exchange rate CHF/EUR", x = "Date", colour = "Variable")+ theme(legend.position = c(0.9,0.9))
PlotFX
PlotFX <- ggplot(data=Data, aes(x= Date)) + geom_line(aes(y = 1/CHFEUR, colour = "CHF/EUR Exchange rate"))+
scale_colour_manual(values = c("green"))+ labs(y = "Exchange rate CHF/EUR", x = "Date", colour = "Variable")+ theme(legend.position = c(0.85,0.9))
PlotFX
pdf("plot_SD_ExchangeRate.pdf", height = 20, width = 15)
par(mfrow = c(2,1))
PlotIndex
PlotFX
dev.off()
par(mfrow = c(2,1))
PlotIndex
PlotFX
pdf("plot_SD_ExchangeRate.pdf", height = 20, width = 15)
facet_wrap(~variable, col = 1)
facet_wrap(~variable, ncol = 1)
PlotIndex
PlotFX
?facet_wrap
facet_wrap(~PlotIndex + PlotFx, ncol = 1)
PlotIndex <- ggplot(data = Data, aes(x = Date)) + geom_line(aes(y = RetSMI, colour = "Swiss Market Index")) + geom_line(aes(y = ChgSD, colour = "Sight Deposits of Domestic Banks"))+
#(sec.axis = sec_axis(~.), name = "Sight Deposits growth (indexed: 15.02.2008 = 100)") +
scale_y_log10()+
scale_colour_manual(values = c("blue", "red"))+ labs(y = "logIndex (15.02.2008 = 100)",
x = "Date",
colour = "Legend") + theme(legend.position = c(0.82,0.5))+
facet_wrap(~variable, ncol = 1)
PlotIndex
p <- list(PlotIndex, PlotFX)
pdf("plot_SD_ExchangeRate.pdf", onefile = TRUE)
for (i in seq(length(p))) {
do.call("grid.arrange", p[[i]])
}
install.packages("gridExtra")
library(gridExtra)
pdf("plot_SD_ExchangeRate.pdf", onefile = TRUE)
for (i in seq(length(p))) {
do.call("grid.arrange", p[[i]])
}
dev.off()
p <- list(PlotIndex, PlotFX)
pdf("plot_SD_ExchangeRate.pdf", onefile = TRUE)
for (i in seq(length(p))) {
do.call("grid.arrange", p[i])
}
dev.off()
PlotIndex <- ggplot(data = Data, aes(x = Date)) + geom_line(aes(y = RetSMI, colour = "Swiss Market Index")) + geom_line(aes(y = ChgSD, colour = "Sight Deposits of Domestic Banks"))+
#(sec.axis = sec_axis(~.), name = "Sight Deposits growth (indexed: 15.02.2008 = 100)") +
scale_y_log10()+
scale_colour_manual(values = c("blue", "red"))+ labs(y = "logIndex (15.02.2008 = 100)",
x = "Date",
colour = "Legend") + theme(legend.position = c(0.82,0.5))+
facet_wrap(~variable, ncol = 1)
PlotFX <- ggplot(data=Data, aes(x= Date)) + geom_line(aes(y = 1/CHFEUR, colour = "CHF/EUR Exchange rate"))+
scale_colour_manual(values = c("green"))+ labs(y = "Exchange rate CHF/EUR", x = "Date", colour = "Legend")+ theme(legend.position = c(0.85,0.9))
pdf("plot_SD_SMI.pdf", onefile = TRUE)
PlotIndex
dev.off()
pdf("plot_SD_SMI.pdf", onefile = TRUE)
PlotIndex
dev.off()
pdf("plot_SD_ExchangeRate.pdf", height = 20, width = 15)
PlotIndex
PlotIndex <- ggplot(data = Data, aes(x = Date)) + geom_line(aes(y = RetSMI, colour = "Swiss Market Index")) + geom_line(aes(y = ChgSD, colour = "Sight Deposits of Domestic Banks"))+
#(sec.axis = sec_axis(~.), name = "Sight Deposits growth (indexed: 15.02.2008 = 100)") +
scale_y_log10()+
scale_colour_manual(values = c("blue", "red"))+ labs(y = "logIndex (15.02.2008 = 100)",
x = "Date",
colour = "Legend") + theme(legend.position = c(0.82,0.5))
pdf("plot_SD_ExchangeRate.pdf", height = 20, width = 15)
PlotIndex
dev.off()
pdf("plot_SD_ExchangeRate.pdf", height = 20, width = 15)
PlotIndex
dev.off()
pdf("plot_SD_ExchangeRate.pdf", height = 10, width = 10)
PlotIndex
dev.off()
PlotIndex
PlotFX
