ChgSDdomBanks <- diff(log(data$SDofDomBanks)) # Sight deposits of dom. Banks
# SNB Data
ChgSDdomBanks <- diff(dataind08$SDofDomBanks)/dataind08$SDofDomBanks[-length(dataind08$SDofDomBanks)] # Sight deposits of dom. Banks
# Creating Returns data set
dataret <- cbind(dataind08$Date,ChgSDdomBanks, RetSMI, RetSPIEX, RetSMIMid,dataind08[,-c(1:4)] )
# Creating Returns data set
dataret <- cbind(dataind08$Date,ChgSDdomBanks, RetSMI, RetSPIEX, RetSMIMid,dataind08[-1,-c(1:4)] )
# Creating Returns data set
dataret <- cbind(dataind08$Date[-1,],ChgSDdomBanks, RetSMI, RetSPIEX, RetSMIMid,dataind08[-1,-c(1:4)] )
# Creating Returns data set
dataret <- cbind(dataind08$Date,ChgSDdomBanks, RetSMI, RetSPIEX, RetSMIMid,dataind08[-1,-c(1:4)] )
# Creating Returns data set
dataret <- cbind(dataind08[-1, -c(2:ncol(dataind08))],ChgSDdomBanks, RetSMI, RetSPIEX, RetSMIMid,dataind08[-1,-c(1:4)] )
View(dataret)
View(dataret)
# Creating Returns data set
dataret <- cbind(dataind08[-1, -c(2:10)],ChgSDdomBanks, RetSMI, RetSPIEX, RetSMIMid,dataind08[-1,-c(1:4)] )
View(dataret)
colnames(dataret[1,]) <- "Date"
View(dataret)
View(dataind08)
View(dataind08)
# Creating Returns data set
dataret <- dataind08[-1, -c(2:5)]
dataret <- cbind(dataret, RetSMI, RetSPIEX, RetSMIMid, ChgSDdomBanks)
View(dataret)
View(dataret)
# Inclusions
SMIdata <- dataret[,-c(8,9)]  # Includes SMI as only stock indice
SPIEXdata <- dataret[,-c(7,9)] # Includes SPI Extra as only stock indice
SMIMdata <- dataret[, -c(7,8)] # Includes the SMI Mid as only stock indice
View(SMIdata)
# SMI data
SMIdata$SMIdir <- as.factor(ifelse(SMIdata$RetSMI > 0, "up", ifelse(SMIdata$RetSMI < 0, "down", "no change" ))) # Including a column with up, down factors
SMIdata$SDdomBanksdir <- as.factor(ifelse(SMIdata$ChgSDdomBanks > 0, "up", ifelse(SMIdata$ChgSDdomBanks < 0, "down", "no change" )))
SMIdata$SMIM.FC <- as.factor(ifelse(SMIdata$SMIM > 0, "up", ifelse(SMIMdata$SMI < 0, "down", "no change" ))) # Reproduce the column SMIM.Dir
SMIMdata$SMI.FC[1:350] <- SMIMdata$SMIM.FC[2:351] # Lag the series to produce forecasts
SMIMdata <-SMIMdata[-351,] # delete the last row
View(SMIdata)
# SMI data
SMIdata$SMIdir <- as.factor(ifelse(SMIdata$RetSMI > 0, "up", ifelse(SMIdata$RetSMI < 0, "down", "no change" ))) # Including a column with up, down factors
# SMI data
SMIdata$SMIdir <- as.factor(ifelse(SMIdata$RetSMI > 0, "up", ifelse(SMIdata$RetSMI < 0, "down", "no change" ))) # Including a column with up, down factors
# SMI data
SMIdata$SMIdir <- as.factor(ifelse(SMIdata$RetSMI > 0, "up", ifelse(SMIdata$RetSMI < 0, "down", "no change" ))) # Including a column with up, down factors
SMIdata$SDdomBanksdir <- as.factor(ifelse(SMIdata$ChgSDdomBanks > 0, "up", ifelse(SMIdata$ChgSDdomBanks < 0, "down", "no change" )))
SMIdata$SMI.FC <- as.factor(ifelse(SMIdata$SMI > 0, "up", ifelse(SMIdata$SMI < 0, "down", "no change" ))) # Reproduce the column SMIM.Dir
SMIdata$SMI.FC[1:350] <- SMIdata$SMI.FC[2:351] # Lag the series to produce forecasts
# SMI data
SMIdata$SMIdir <- as.factor(ifelse(SMIdata$RetSMI > 0, "up", ifelse(SMIdata$RetSMI < 0, "down", "no change" ))) # Including a column with up, down factors
SMIdata$SDdomBanksdir <- as.factor(ifelse(SMIdata$ChgSDdomBanks > 0, "up", ifelse(SMIdata$ChgSDdomBanks < 0, "down", "no change" )))
SMIdata$SMI.FC <- as.factor(ifelse(SMIdata$SMI > 0, "up", ifelse(SMIdata$SMI < 0, "down", "no change" ))) # Reproduce the column SMIM.Dir
View(SMIMdata)
View(SMIdata)
SMIdata$SMI.FC <- as.factor(ifelse(SMIdata$RetSMI > 0, "up", ifelse(SMIdata$RetSMI < 0, "down", "no change" ))) # Reproduce the column SMIM.Dir
SMIdata$SMI.FC[1:350] <- SMIdata$SMI.FC[2:351] # Lag the series to produce forecasts
SMIMdata <-SMIMdata[-351,] # delete the last row
View(SMIdata)
# SPIEX data
SPIEXdata$SPIEXdir <- as.factor(ifelse(SPIEXdata$RetSPIEX > 0, "up", ifelse(SPIEXdata$RetSPIEX < 0, "down", "no change" ))) # Including a column with up, down factors
SPIEXdata$SDdomBanksdir <- as.factor(ifelse(SPIEXdata$ChgSDdomBanks > 0, "up", ifelse(SPIEXdata$ChgSDdomBanks < 0, "down", "no change" )))
SPIEXdata$SMI.FC <- as.factor(ifelse(SPIEXdata$RetSPIEX > 0, "up", ifelse(SPIEXdata$RetSPIEX < 0, "down", "no change" ))) # Reproduce the column SMIM.Dir
SPIEXdata$SPIEX.FC[1:350] <- SPIEXdata$SPIEX.FC[2:351] # Lag the series to produce forecasts
SPIEXdata <-SPIEXdata[-351,] # delete the last row
View(SPIEXdata)
SPIEXdata$SPIEX.FC <- as.factor(ifelse(SPIEXdata$RetSPIEX > 0, "up", ifelse(SPIEXdata$RetSPIEX < 0, "down", "no change" ))) # Reproduce the column SMIM.Dir
SPIEXdata$SPIEX.FC[1:350] <- SPIEXdata$SPIEX.FC[2:351] # Lag the series to produce forecasts
SPIEXdata <-SPIEXdata[-351,] # delete the last row
View(SPIEXdata)
SPIEXdata <- dataret[,-c(7,9)] # Includes SPI Extra as only stock indice
SMIMdata <- dataret[, -c(7,8)] # Includes the SMI Mid as only stock indice
# SMI data
SMIdata$SMIdir <- as.factor(ifelse(SMIdata$RetSMI > 0, "up", ifelse(SMIdata$RetSMI < 0, "down", "no change" ))) # Including a column with up, down factors
SMIdata$SDdomBanksdir <- as.factor(ifelse(SMIdata$ChgSDdomBanks > 0, "up", ifelse(SMIdata$ChgSDdomBanks < 0, "down", "no change" )))
SMIdata$SMI.FC <- as.factor(ifelse(SMIdata$RetSMI > 0, "up", ifelse(SMIdata$RetSMI < 0, "down", "no change" ))) # Reproduce the column SMIM.Dir
SMIdata$SMI.FC[1:350] <- SMIdata$SMI.FC[2:351] # Lag the series to produce forecasts
# Inclusions
SMIdata <- dataret[,-c(8,9)]  # Includes SMI as only stock indice
SPIEXdata <- dataret[,-c(7,9)] # Includes SPI Extra as only stock indice
SMIMdata <- dataret[, -c(7,8)] # Includes the SMI Mid as only stock indice
# SMI data
SMIdata$SMIdir <- as.factor(ifelse(SMIdata$RetSMI > 0, "up", ifelse(SMIdata$RetSMI < 0, "down", "no change" ))) # Including a column with up, down factors
SMIdata$SDdomBanksdir <- as.factor(ifelse(SMIdata$ChgSDdomBanks > 0, "up", ifelse(SMIdata$ChgSDdomBanks < 0, "down", "no change" )))
SMIdata$SMI.FC <- as.factor(ifelse(SMIdata$RetSMI > 0, "up", ifelse(SMIdata$RetSMI < 0, "down", "no change" ))) # Reproduce the column SMIM.Dir
SMIdata$SMI.FC[1:350] <- SMIdata$SMI.FC[2:351] # Lag the series to produce forecasts
SMIMdata <-SMIMdata[-351,] # delete the last row
# SPIEX data
SPIEXdata$SPIEXdir <- as.factor(ifelse(SPIEXdata$RetSPIEX > 0, "up", ifelse(SPIEXdata$RetSPIEX < 0, "down", "no change" ))) # Including a column with up, down factors
SPIEXdata$SDdomBanksdir <- as.factor(ifelse(SPIEXdata$ChgSDdomBanks > 0, "up", ifelse(SPIEXdata$ChgSDdomBanks < 0, "down", "no change" )))
SPIEXdata$SPIEX.FC <- as.factor(ifelse(SPIEXdata$RetSPIEX > 0, "up", ifelse(SPIEXdata$RetSPIEX < 0, "down", "no change" ))) # Reproduce the column SMIM.Dir
SPIEXdata$SPIEX.FC[1:350] <- SPIEXdata$SPIEX.FC[2:351] # Lag the series to produce forecasts
SPIEXdata <-SPIEXdata[-351,] # delete the last row
View(SPIEXdata)
# SMI data
SMIdata$SMIdir <- as.factor(ifelse(SMIdata$RetSMI > 0, "up", ifelse(SMIdata$RetSMI < 0, "down", "no change" ))) # Including a column with up, down factors
SMIdata$SDdomBanksdir <- as.factor(ifelse(SMIdata$ChgSDdomBanks > 0, "up", ifelse(SMIdata$ChgSDdomBanks < 0, "down", "no change" )))
SMIdata$SMI.FC <- as.factor(ifelse(SMIdata$RetSMI > 0, "up", ifelse(SMIdata$RetSMI < 0, "down", "no change" ))) # Reproduce the column SMIM.Dir
SMIdata$SMI.FC[1:350] <- SMIdata$SMI.FC[2:351] # Lag the series to produce forecasts
SMIdata <-SMIdata[-351,] # delete the last row
MIdata <- dataret[,-c(8,9)]  # Includes SMI as only stock indice
SPIEXdata <- dataret[,-c(7,9)] # Includes SPI Extra as only stock indice
SMIMdata <- dataret[, -c(7,8)] # Includes the SMI Mid as only stock indice
## Classification: Up / Down --------------------------------------
# SMI data
SMIdata$SMIdir <- as.factor(ifelse(SMIdata$RetSMI > 0, "up", ifelse(SMIdata$RetSMI < 0, "down", "no change" ))) # Including a column with up, down factors
SMIdata$SDdomBanksdir <- as.factor(ifelse(SMIdata$ChgSDdomBanks > 0, "up", ifelse(SMIdata$ChgSDdomBanks < 0, "down", "no change" )))
SMIdata$SMI.FC <- as.factor(ifelse(SMIdata$RetSMI > 0, "up", ifelse(SMIdata$RetSMI < 0, "down", "no change" ))) # Reproduce the column SMIM.Dir
SMIdata$SMI.FC[1:350] <- SMIdata$SMI.FC[2:351] # Lag the series to produce forecasts
SMIdata <-SMIdata[-351,] # delete the last row
# SPIEX data
SPIEXdata$SPIEXdir <- as.factor(ifelse(SPIEXdata$RetSPIEX > 0, "up", ifelse(SPIEXdata$RetSPIEX < 0, "down", "no change" ))) # Including a column with up, down factors
SPIEXdata$SDdomBanksdir <- as.factor(ifelse(SPIEXdata$ChgSDdomBanks > 0, "up", ifelse(SPIEXdata$ChgSDdomBanks < 0, "down", "no change" )))
SPIEXdata$SPIEX.FC <- as.factor(ifelse(SPIEXdata$RetSPIEX > 0, "up", ifelse(SPIEXdata$RetSPIEX < 0, "down", "no change" ))) # Reproduce the column SMIM.Dir
SPIEXdata$SPIEX.FC[1:350] <- SPIEXdata$SPIEX.FC[2:351] # Lag the series to produce forecasts
SPIEXdata <-SPIEXdata[-351,] # delete the last row
# SMImid data
SMIMdata$SMIdir <- as.factor(ifelse(SMIMdata$RetSMI > 0, "up", ifelse(SMIMdata$RetSMI < 0, "down", "no change" ))) # Including a column with up, down factors
SMIMdata$SDdomBanksdir <- as.factor(ifelse(SMIMdata$ChgSDdomBanks > 0, "up", ifelse(SMIMdata$ChgSDdomBanks < 0, "down", "no change" )))
SMIMdata$SMI.FC <- as.factor(ifelse(SMIMdata$RetSMI > 0, "up", ifelse(SMIMdata$RetSMI < 0, "down", "no change" ))) # Reproduce the column SMIM.Dir
SMIMdata$SMI.FC[1:350] <- SMIMdata$SMIM.FC[2:351] # Lag the series to produce forecasts
SMIMdata <-SMIMdata[-351,] # delete the last row
View(MIdata)
# SMImid data
SMIMdata$SMIdir <- as.factor(ifelse(SMIMdata$RetSMI > 0, "up", ifelse(SMIMdata$RetSMI < 0, "down", "no change" ))) # Including a column with up, down factors
SMIMdata$SDdomBanksdir <- as.factor(ifelse(SMIMdata$ChgSDdomBanks > 0, "up", ifelse(SMIMdata$ChgSDdomBanks < 0, "down", "no change" )))
SMIMdata$SMIM.FC <- as.factor(ifelse(SMIMdata$RetSMI > 0, "up", ifelse(SMIMdata$RetSMI < 0, "down", "no change" ))) # Reproduce the column SMIM.Dir
SMIMdata$SMIM.FC[1:350] <- SMIMdata$SMIM.FC[2:351] # Lag the series to produce forecasts
SMIMdata <-SMIMdata[-351,] # delete the last row
View(SMIdata)
View(SMIMdata)
# Index Data
dataind04 <- read.csv2("Indices from 04.csv", header = TRUE , sep = ";") #reading in data
dataind04 <- transform(dataind04, Date = as.Date(Date, format = "%Y-%m-%d") ,SNBSD = as.numeric(as.character(SNBSD)), SMI = as.numeric(as.character(SMI)),
SPIEX = as.numeric(as.character(SPIEX)), SMI.Mid = as.numeric(as.character(SMI.Mid)), CHF.USD = as.numeric(as.character(CHF.USD)), CHF.EUR = as.numeric(as.character(CHF.EUR))) # Converting numbers into numeric format and date column to date format
# SNB Data
dataind08 <- read.csv2("Data_for_import_Indices_from_08.csv", header = TRUE , sep = ";") #reading in data
## Data Cleaning --------------------------------------
# Transforming the columns of the data frame into numeric
dataind08 <- transform(dataind08, Date = as.Date(Date, format = "%Y-%m-%d") ,SMI = as.numeric(as.character(SMI)), SDofDomBanks = as.numeric(as.character(SDofDomBanks)),
SPIEX = as.numeric(as.character(SPIEX)), SMIMid = as.numeric(as.character(SMIMid)), Gov10yr = as.numeric(as.character(Gov10yr)),
Gov3yr = as.numeric(as.character(Gov3yr)), Libor3M_CHF = as.numeric(as.character(Libor3M_CHF)), CHFUSD = as.numeric(as.character(CHFUSD)),
CHFEUR = as.numeric(as.character(CHFEUR))) # Converting numbers into numeric format and date column to date format
dataind08[is.na(dataind08)] <- 0 # Replacing NA with 0, NA indruduced due to #DIV/0! Entry in excel.
str(dataind08)
## Return calculations --------------
# Stock data
RetSMI <-  diff(log(dataind08$SMI)) # Weekly returns of the SMI
RetSPIEX <- diff(log(dataind08$SPIEX)) # Weekly returns of the SPIEX
RetSMIMid <- diff(log(dataind08$SMIMid)) # Weekly returns of the SMIMid
# SNB Data
ChgSDdomBanks <- diff(dataind08$SDofDomBanks)/dataind08$SDofDomBanks[-length(dataind08$SDofDomBanks)] # Sight deposits of dom. Banks
# Creating Returns data set
dataret <- dataind08[-1, -c(2:5)]
dataret <- cbind(dataret, RetSMI, RetSPIEX, RetSMIMid, ChgSDdomBanks)
# Inclusions
SMIdata <- dataret[,-c(8,9)]  # Includes SMI as only stock indice
SPIEXdata <- dataret[,-c(7,9)] # Includes SPI Extra as only stock indice
SMIMdata <- dataret[, -c(7,8)] # Includes the SMI Mid as only stock indice
## Classification: Up / Down --------------------------------------
# SMI data
SMIdata$SMIdir <- as.factor(ifelse(SMIdata$RetSMI > 0, "up", ifelse(SMIdata$RetSMI < 0, "down", "no change" ))) # Including a column with up, down factors
SMIdata$SDdomBanksdir <- as.factor(ifelse(SMIdata$ChgSDdomBanks > 0, "up", ifelse(SMIdata$ChgSDdomBanks < 0, "down", "no change" )))
SMIdata$SMI.FC <- as.factor(ifelse(SMIdata$RetSMI > 0, "up", ifelse(SMIdata$RetSMI < 0, "down", "no change" ))) # Reproduce the column SMIM.Dir
SMIdata$SMI.FC[1:350] <- SMIdata$SMI.FC[2:351] # Lag the series to produce forecasts
SMIdata <-SMIdata[-351,] # delete the last row
# SPIEX data
SPIEXdata$SPIEXdir <- as.factor(ifelse(SPIEXdata$RetSPIEX > 0, "up", ifelse(SPIEXdata$RetSPIEX < 0, "down", "no change" ))) # Including a column with up, down factors
SPIEXdata$SDdomBanksdir <- as.factor(ifelse(SPIEXdata$ChgSDdomBanks > 0, "up", ifelse(SPIEXdata$ChgSDdomBanks < 0, "down", "no change" )))
SPIEXdata$SPIEX.FC <- as.factor(ifelse(SPIEXdata$RetSPIEX > 0, "up", ifelse(SPIEXdata$RetSPIEX < 0, "down", "no change" ))) # Reproduce the column SMIM.Dir
SPIEXdata$SPIEX.FC[1:350] <- SPIEXdata$SPIEX.FC[2:351] # Lag the series to produce forecasts
SPIEXdata <-SPIEXdata[-351,] # delete the last row
# SMImid data
SMIMdata$SMIdir <- as.factor(ifelse(SMIMdata$RetSMIMid > 0, "up", ifelse(SMIMdata$RetSMIMid < 0, "down", "no change" ))) # Including a column with up, down factors
SMIMdata$SDdomBanksdir <- as.factor(ifelse(SMIMdata$ChgSDdomBanks > 0, "up", ifelse(SMIMdata$ChgSDdomBanks < 0, "down", "no change" )))
SMIMdata$SMIM.FC <- as.factor(ifelse(SMIMdata$RetSMIMid > 0, "up", ifelse(SMIMdata$RetSMIMid < 0, "down", "no change" ))) # Reproduce the column SMIM.Dir
SMIMdata$SMIM.FC[1:350] <- SMIMdata$SMIM.FC[2:351] # Lag the series to produce forecasts
SMIMdata <-SMIMdata[-351,] # delete the last row
View(SPIEXdata)
View(SMIdata)
View(SMIdata)
View(SMIdata)
## Plotting --------------------------------------
# Indices
par(mfrow = c(3,2))
plot(dataind04$Date, dataind04$SMI, type = "l", xlab = "Date", ylab = "Index", main = "SMI") # SMI
plot(dataind04$Date, dataind04$SPIEX,  type = "l", xlab = "Date", ylab = "Index", main = "SPI Extra") # SPI Extra
plot(dataind04$Date, dataind04$SMI.Mid,  type = "l", xlab = "Date", ylab = "Index", main = "SMI Mid") # SMI Mid
plot(dataind04$Date, dataind04$SNBSD,  type = "l", xlab = "Date", ylab = "Index", main = "SNB Sight Deposits") # SNB Sight Deposits
plot(dataind04$Date, dataind04$CHF.USD,  type = "l", xlab = "Date", ylab = "Index", main = "CHF/USD Exchange rate") # CHF/USD Exchange rate
plot(dataind04$Date, dataind04$CHF.EUR,  type = "l", xlab = "Date", ylab = "Index", main = "CHF/EUR Exchange rate") # CHF/EUR Exchange rate
## Correlations --------------------------------------
# Indices & SNB Sight Deposits
cor.ind <- cor(dataind04[,-1], method = "spearman")
# All Variables
DataWoDates <- dataret[,-1] # Delete the Date column
Cor <- cor(DataWoDates, method = "spearman") # calculate the Correlation Matrix Spearman
# During CapPeriods
CapPeriod.cor <- cor(DataWoDates[1:137, ])
# PostCapPeriod CapPeriods
PostCapPeriod.cor <- cor(DataWoDates[138:350,])
# PreCapPeriods
PreCapPeriod.cor <- cor(dataWoDates[1:227])
# PreCapPeriods
PreCapPeriod.cor <- cor(DataWoDates[1:227])
# PreCapPeriods
PreCapPeriod.cor <- cor(DataWoDates[1:227,])
# SMI Stock indice
# Defining the Periods for the three stock indices
# Three Periods: Before, During and Post Cap (row 137 is the 16th of Jan, i.e. 1 day after the removal of the Cap)
PreCapPeriod <- SMIdata[1:227,] # Data set from 2008 - 02 - 08 to 2012 - 06 - 01 (PreCapPeriod phase)
CapPeriod <- SNB.SMIMdata[228:413, ] # Data set from 2012 - 06 - 08 to 2016 - 01 - 01 (CapPeriod phase)
PostCapPeriod <- SNB.SMIMdata[414:575, ] # Data set from 2016 - 01 - 08 to 2019 - 02 - 22 (PostCapPeriod CapPeriod phase)
# SMI Stock indice
# Defining the Periods for the three stock indices
# Three Periods: Before, During and Post Cap (row 137 is the 16th of Jan, i.e. 1 day after the removal of the Cap)
PreCapPeriod <- SMIdata[1:227,] # Data set from 2008 - 02 - 08 to 2012 - 06 - 01 (PreCapPeriod phase)
CapPeriod <- SMIMdata[228:413, ] # Data set from 2012 - 06 - 08 to 2016 - 01 - 01 (CapPeriod phase)
PostCapPeriod <- SMIMdata[414:575, ] # Data set from 2016 - 01 - 08 to 2019 - 02 - 22 (PostCapPeriod CapPeriod phase)
View(CapPeriod)
View(dataret)
# PreCapPeriod Model describing SMI Forecast (column 10)
PreCapPeriod.model <- C5.0(PreCapPeriod[-11], PreCapPeriod$SMI.FC, rules = TRUE)
# CapPeriod Model describing SMIM Forecast (column 10)
CapPeriod.model <- C5.0(CapPeriod[-16], CapPeriod$SMI.FC, rules = TRUE)
# CapPeriod Model describing SMIM Forecast (column 10)
CapPeriod.model <- C5.0(CapPeriod[-11], CapPeriod$SMI.FC, rules = TRUE)
# SMI Stock indice
# Defining the Periods for the three stock indices
# Three Periods: Before, During and Post Cap (row 137 is the 16th of Jan, i.e. 1 day after the removal of the Cap)
PreCapPeriod <- SMIdata[1:227,] # Data set from 2008 - 02 - 08 to 2012 - 06 - 01 (PreCapPeriod phase)
CapPeriod <- SMIMdata[228:413, ] # Data set from 2012 - 06 - 08 to 2016 - 01 - 01 (CapPeriod phase)
PostCapPeriod <- SMIMdata[414:575, ] # Data set from 2016 - 01 - 08 to 2019 - 02 - 22 (PostCapPeriod CapPeriod phase)
str(PreCapPeriod)
# PreCapPeriod Model describing SMI Forecast (column 10)
PreCapPeriod.model <- C5.0(PreCapPeriod[-11], PreCapPeriod$SMI.FC, rules = TRUE)
# PreCapPeriod Model describing SMI Forecast (column 10)
PreCapPeriod.model <- C5.0(PreCapPeriod[-11], PreCapPeriod$SMI.FC)
# PreCapPeriod Model describing SMI Forecast (column 10)
PreCapPeriod.model <- C5.0(PreCapPeriod[-11], PreCapPeriod$SMI.FC, rules = TRUE)
# PreCapPeriod Model describing SMI Forecast (column 10)
PreCapPeriod.model <- C5.0(PreCapPeriod[,-11], PreCapPeriod$SMI.FC, rules = TRUE)
View(PreCapPeriod)
# SMI Stock indice
# Defining the Periods for the three stock indices
# Three Periods: Before, During and Post Cap (row 137 is the 16th of Jan, i.e. 1 day after the removal of the Cap)
PreCapPeriod <- SMIdata[1:227,-1] # Data set from 2008 - 02 - 08 to 2012 - 06 - 01 (PreCapPeriod phase)
CapPeriod <- SMIMdata[228:413,-1 ] # Data set from 2012 - 06 - 08 to 2016 - 01 - 01 (CapPeriod phase)
PostCapPeriod <- SMIMdata[414:575,-1 ] # Data set from 2016 - 01 - 08 to 2019 - 02 - 22 (PostCapPeriod CapPeriod phase)
# PreCapPeriod Model describing SMI Forecast (column 10)
PreCapPeriod.model <- C5.0(PreCapPeriod[,-11], PreCapPeriod$SMI.FC, rules = TRUE)
PreCapPeriod.model
summary(PreCapPeriod.model)
# PreCapPeriod Model describing SMI Forecast (column 10)
PreCapPeriod.model <- C5.0(PreCapPeriod[-10], PreCapPeriod$SMI.FC, rules = TRUE)
PreCapPeriod.model
summary(PreCapPeriod.model)
# CapPeriod Model describing SMIM Forecast (column 10)
CapPeriod.model <- C5.0(CapPeriod[-10], CapPeriod$SMI.FC, rules = TRUE)
str(CapPeriod)
# CapPeriod Model describing SMIM Forecast (column 10)
CapPeriod.model <- C5.0(CapPeriod[-10], CapPeriod$SMI.FC, rules = TRUE)
# PostCapPeriod Model describing SMIM Forecast (column 10)
PostCapPeriod.model <- C5.0(PostCapPeriod[-10], PostCapPeriod$SMIM.FC, rules = TRUE)
PostCapPeriod.model
summary(PostCapPeriod.model)
CapPeriod <- SMIMdata[228:413,-1] # Data set from 2012 - 06 - 08 to 2016 - 01 - 01 (CapPeriod phase)
PostCapPeriod <- SMIMdata[414:575,-1] # Data set from 2016 - 01 - 08 to 2019 - 02 - 22 (PostCapPeriod CapPeriod phase)
# PreCapPeriod Model describing SMI Forecast (column 10)
PreCapPeriod.model <- C5.0(PreCapPeriod[-10], PreCapPeriod$SMI.FC, rules = TRUE)
PreCapPeriod.model
summary(PreCapPeriod.model)
# CapPeriod Model describing SMIM Forecast (column 10)
CapPeriod.model <- C5.0(CapPeriod[-10], CapPeriod$SMI.FC, rules = TRUE)
View(CapPeriod)
View(CapPeriod)
# SMI Stock indice
# Defining the Periods for the three stock indices
# Three Periods: Before, During and Post Cap (row 137 is the 16th of Jan, i.e. 1 day after the removal of the Cap)
PreCapPeriod <- SMIdata[1:227,-1] # Data set from 2008 - 02 - 08 to 2012 - 06 - 01 (PreCapPeriod phase)
CapPeriod <- SMIdata[228:413,-1] # Data set from 2012 - 06 - 08 to 2016 - 01 - 01 (CapPeriod phase)
PostCapPeriod <- SMIdata[414:575,-1] # Data set from 2016 - 01 - 08 to 2019 - 02 - 22 (PostCapPeriod CapPeriod phase)
# PreCapPeriod Model describing SMI Forecast (column 10)
PreCapPeriod.model <- C5.0(PreCapPeriod[-10], PreCapPeriod$SMI.FC, rules = TRUE)
PreCapPeriod.model
summary(PreCapPeriod.model)
# CapPeriod Model describing SMIM Forecast (column 10)
CapPeriod.model <- C5.0(CapPeriod[-10], CapPeriod$SMI.FC, rules = TRUE)
CapPeriod.model
summary(CapPeriod.model)
# PostCapPeriod Model describing SMIM Forecast (column 10)
PostCapPeriod.model <- C5.0(PostCapPeriod[-10], PostCapPeriod$SMIM.FC, rules = TRUE)
# PostCapPeriod Model describing SMIM Forecast (column 10)
PostCapPeriod.model <- C5.0(PostCapPeriod[-10], PostCapPeriod$SMI.FC, rules = TRUE)
PostCapPeriod.model
summary(PostCapPeriod.model)
PostCapPeriod <- SMIdata[414:575,-1] # Data set from 2016 - 01 - 08 to 2019 - 02 - 22 (PostCapPeriod CapPeriod phase)
# PreCapPeriod Model describing SMI Forecast (column 10)
PreCapPeriod.model <- C5.0(PreCapPeriod[-10], PreCapPeriod$SMI.FC, rules = TRUE)
PreCapPeriod.model
summary(PreCapPeriod.model)
# CapPeriod Model describing SMIM Forecast (column 10)
CapPeriod.model <- C5.0(CapPeriod[-10], CapPeriod$SMI.FC, rules = TRUE)
CapPeriod.model
summary(CapPeriod.model)
# PostCapPeriod Model describing SMIM Forecast (column 10)
PostCapPeriod.model <- C5.0(PostCapPeriod[-10], PostCapPeriod$SMI.FC, rules = TRUE)
PostCapPeriod.model
summary(PostCapPeriod.model)
View(PostCapPeriod)
summary(PostCapPeriod.model)
View(PostCapPeriod)
# Data Import --------------------------------------
# Index Data
dataind04 <- read.csv2("Indices from 04.csv", header = TRUE , sep = ";") #reading in data
dataind04 <- transform(dataind04, Date = as.Date(Date, format = "%Y-%m-%d") ,SNBSD = as.numeric(as.character(SNBSD)), SMI = as.numeric(as.character(SMI)),
SPIEX = as.numeric(as.character(SPIEX)), SMI.Mid = as.numeric(as.character(SMI.Mid)), CHF.USD = as.numeric(as.character(CHF.USD)), CHF.EUR = as.numeric(as.character(CHF.EUR))) # Converting numbers into numeric format and date column to date format
# SNB Data
dataind08 <- read.csv2("Data_for_import_Indices_from_08.csv", header = TRUE , sep = ";") #reading in data
## Data Cleaning --------------------------------------
# Transforming the columns of the data frame into numeric
dataind08 <- transform(dataind08, Date = as.Date(Date, format = "%Y-%m-%d") ,SMI = as.numeric(as.character(SMI)), SDofDomBanks = as.numeric(as.character(SDofDomBanks)),
SPIEX = as.numeric(as.character(SPIEX)), SMIMid = as.numeric(as.character(SMIMid)), Gov10yr = as.numeric(as.character(Gov10yr)),
Gov3yr = as.numeric(as.character(Gov3yr)), Libor3M_CHF = as.numeric(as.character(Libor3M_CHF)), CHFUSD = as.numeric(as.character(CHFUSD)),
CHFEUR = as.numeric(as.character(CHFEUR))) # Converting numbers into numeric format and date column to date format
dataind08[is.na(dataind08)] <- 0 # Replacing NA with 0, NA indruduced due to #DIV/0! Entry in excel.
str(dataind08)
## Return calculations --------------
# Stock data
RetSMI <-  diff(log(dataind08$SMI)) # Weekly returns of the SMI
RetSPIEX <- diff(log(dataind08$SPIEX)) # Weekly returns of the SPIEX
RetSMIMid <- diff(log(dataind08$SMIMid)) # Weekly returns of the SMIMid
# SNB Data
ChgSDdomBanks <- diff(dataind08$SDofDomBanks)/dataind08$SDofDomBanks[-length(dataind08$SDofDomBanks)] # Sight deposits of dom. Banks
# Creating Returns data set
dataret <- dataind08[-1, -c(2:5)]
dataret <- cbind(dataret, RetSMI, RetSPIEX, RetSMIMid, ChgSDdomBanks)
# Inclusions
SMIdata <- dataret[,-c(8,9)]  # Includes SMI as only stock indice
SPIEXdata <- dataret[,-c(7,9)] # Includes SPI Extra as only stock indice
SMIMdata <- dataret[, -c(7,8)] # Includes the SMI Mid as only stock indice
# SMI data
SMIdata$SMIdir <- as.factor(ifelse(SMIdata$RetSMI > 0, "up", ifelse(SMIdata$RetSMI < 0, "down", "no change" ))) # Including a column with up, down factors
SMIdata$SDdomBanksdir <- as.factor(ifelse(SMIdata$ChgSDdomBanks > 0, "up", ifelse(SMIdata$ChgSDdomBanks < 0, "down", "no change" )))
SMIdata$SMI.FC <- as.factor(ifelse(SMIdata$RetSMI > 0, "up", ifelse(SMIdata$RetSMI < 0, "down", "no change" ))) # Reproduce the column SMIM.Dir
SMIdata$SMI.FC[1:350] <- SMIdata$SMI.FC[2:351] # Lag the series to produce forecasts
SMIdata <-SMIdata[-351,] # delete the last row
# SPIEX data
SPIEXdata$SPIEXdir <- as.factor(ifelse(SPIEXdata$RetSPIEX > 0, "up", ifelse(SPIEXdata$RetSPIEX < 0, "down", "no change" ))) # Including a column with up, down factors
SPIEXdata$SDdomBanksdir <- as.factor(ifelse(SPIEXdata$ChgSDdomBanks > 0, "up", ifelse(SPIEXdata$ChgSDdomBanks < 0, "down", "no change" )))
SPIEXdata$SPIEX.FC <- as.factor(ifelse(SPIEXdata$RetSPIEX > 0, "up", ifelse(SPIEXdata$RetSPIEX < 0, "down", "no change" ))) # Reproduce the column SMIM.Dir
SPIEXdata$SPIEX.FC[1:350] <- SPIEXdata$SPIEX.FC[2:351] # Lag the series to produce forecasts
SPIEXdata <-SPIEXdata[-351,] # delete the last row
# SMImid data
SMIMdata$SMIdir <- as.factor(ifelse(SMIMdata$RetSMIMid > 0, "up", ifelse(SMIMdata$RetSMIMid < 0, "down", "no change" ))) # Including a column with up, down factors
SMIMdata$SDdomBanksdir <- as.factor(ifelse(SMIMdata$ChgSDdomBanks > 0, "up", ifelse(SMIMdata$ChgSDdomBanks < 0, "down", "no change" )))
SMIMdata$SMIM.FC <- as.factor(ifelse(SMIMdata$RetSMIMid > 0, "up", ifelse(SMIMdata$RetSMIMid < 0, "down", "no change" ))) # Reproduce the column SMIM.Dir
SMIMdata$SMIM.FC[1:350] <- SMIMdata$SMIM.FC[2:351] # Lag the series to produce forecasts
SMIMdata <-SMIMdata[-351,] # delete the last row
## Plotting --------------------------------------
# Indices
par(mfrow = c(3,2))
plot(dataind04$Date, dataind04$SMI, type = "l", xlab = "Date", ylab = "Index", main = "SMI") # SMI
plot(dataind04$Date, dataind04$SPIEX,  type = "l", xlab = "Date", ylab = "Index", main = "SPI Extra") # SPI Extra
plot(dataind04$Date, dataind04$SMI.Mid,  type = "l", xlab = "Date", ylab = "Index", main = "SMI Mid") # SMI Mid
plot(dataind04$Date, dataind04$SNBSD,  type = "l", xlab = "Date", ylab = "Index", main = "SNB Sight Deposits") # SNB Sight Deposits
plot(dataind04$Date, dataind04$CHF.USD,  type = "l", xlab = "Date", ylab = "Index", main = "CHF/USD Exchange rate") # CHF/USD Exchange rate
plot(dataind04$Date, dataind04$CHF.EUR,  type = "l", xlab = "Date", ylab = "Index", main = "CHF/EUR Exchange rate") # CHF/EUR Exchange rate
dev.off()
## Correlations --------------------------------------
# Indices & SNB Sight Deposits
cor.ind <- cor(dataind04[,-1], method = "spearman")
# All Variables
DataWoDates <- dataret[,-1] # Delete the Date column
Cor <- cor(DataWoDates, method = "spearman") # calculate the Correlation Matrix Spearman
# PreCapPeriods
PreCapPeriod.cor <- cor(DataWoDates[1:227,])
# During CapPeriods
CapPeriod.cor <- cor(DataWoDates[228:413, ])
# PostCapPeriod CapPeriods
PostCapPeriod.cor <- cor(DataWoDates[414:575,])
# SMI Stock indice
# Defining the Periods for the three stock indices
# Three Periods: Before, During and Post Cap (row 137 is the 16th of Jan, i.e. 1 day after the removal of the Cap)
PreCapPeriod <- SMIdata[1:227,-1] # Data set from 2008 - 02 - 08 to 2012 - 06 - 01 (PreCapPeriod phase)
CapPeriod <- SMIdata[228:413,-1] # Data set from 2012 - 06 - 08 to 2016 - 01 - 01 (CapPeriod phase)
PostCapPeriod <- SMIdata[414:575,-1] # Data set from 2016 - 01 - 08 to 2019 - 02 - 22 (PostCapPeriod CapPeriod phase)
# PreCapPeriod Model describing SMI Forecast (column 10)
PreCapPeriod.model <- C5.0(PreCapPeriod[-10], PreCapPeriod$SMI.FC, rules = TRUE)
PreCapPeriod.model
summary(PreCapPeriod.model)
# CapPeriod Model describing SMIM Forecast (column 10)
CapPeriod.model <- C5.0(CapPeriod[-10], CapPeriod$SMI.FC, rules = TRUE)
CapPeriod.model
summary(CapPeriod.model)
# PostCapPeriod Model describing SMIM Forecast (column 10)
PostCapPeriod.model <- C5.0(PostCapPeriod[-10], PostCapPeriod$SMI.FC, rules = TRUE)
PostCapPeriod.model
summary(PostCapPeriod.model)
View(PostCapPeriod)
View(SMIMdata)
# SMI data
SMIdata$SMIdir <- as.factor(ifelse(SMIdata$RetSMI > 0, "up", ifelse(SMIdata$RetSMI < 0, "down", "no change" ))) # Including a column with up, down factors
SMIdata$SDdomBanksdir <- as.factor(ifelse(SMIdata$ChgSDdomBanks > 0, "up", ifelse(SMIdata$ChgSDdomBanks < 0, "down", "no change" )))
SMIdata$SMI.FC <- as.factor(ifelse(SMIdata$RetSMI > 0, "up", ifelse(SMIdata$RetSMI < 0, "down", "no change" ))) # Reproduce the column SMIM.Dir
SMIdata$SMI.FC[1:574] <- SMIdata$SMI.FC[2:575] # Lag the series to produce forecasts
SMIdata <-SMIdata[-575,] # delete the last row
View(SMIdata)
# Data Import --------------------------------------
# Index Data
dataind04 <- read.csv2("Indices from 04.csv", header = TRUE , sep = ";") #reading in data
dataind04 <- transform(dataind04, Date = as.Date(Date, format = "%Y-%m-%d") ,SNBSD = as.numeric(as.character(SNBSD)), SMI = as.numeric(as.character(SMI)),
SPIEX = as.numeric(as.character(SPIEX)), SMI.Mid = as.numeric(as.character(SMI.Mid)), CHF.USD = as.numeric(as.character(CHF.USD)), CHF.EUR = as.numeric(as.character(CHF.EUR))) # Converting numbers into numeric format and date column to date format
# SNB Data
dataind08 <- read.csv2("Data_for_import_Indices_from_08.csv", header = TRUE , sep = ";") #reading in data
## Data Cleaning --------------------------------------
# Transforming the columns of the data frame into numeric
dataind08 <- transform(dataind08, Date = as.Date(Date, format = "%Y-%m-%d") ,SMI = as.numeric(as.character(SMI)), SDofDomBanks = as.numeric(as.character(SDofDomBanks)),
SPIEX = as.numeric(as.character(SPIEX)), SMIMid = as.numeric(as.character(SMIMid)), Gov10yr = as.numeric(as.character(Gov10yr)),
Gov3yr = as.numeric(as.character(Gov3yr)), Libor3M_CHF = as.numeric(as.character(Libor3M_CHF)), CHFUSD = as.numeric(as.character(CHFUSD)),
CHFEUR = as.numeric(as.character(CHFEUR))) # Converting numbers into numeric format and date column to date format
dataind08[is.na(dataind08)] <- 0 # Replacing NA with 0, NA indruduced due to #DIV/0! Entry in excel.
str(dataind08)
## Return calculations --------------
# Stock data
RetSMI <-  diff(log(dataind08$SMI)) # Weekly returns of the SMI
RetSPIEX <- diff(log(dataind08$SPIEX)) # Weekly returns of the SPIEX
RetSMIMid <- diff(log(dataind08$SMIMid)) # Weekly returns of the SMIMid
# SNB Data
ChgSDdomBanks <- diff(dataind08$SDofDomBanks)/dataind08$SDofDomBanks[-length(dataind08$SDofDomBanks)] # Sight deposits of dom. Banks
# Creating Returns data set
dataret <- dataind08[-1, -c(2:5)]
dataret <- cbind(dataret, RetSMI, RetSPIEX, RetSMIMid, ChgSDdomBanks)
# Inclusions
SMIdata <- dataret[,-c(8,9)]  # Includes SMI as only stock indice
SPIEXdata <- dataret[,-c(7,9)] # Includes SPI Extra as only stock indice
SMIMdata <- dataret[, -c(7,8)] # Includes the SMI Mid as only stock indice
# SMI data
SMIdata$SMIdir <- as.factor(ifelse(SMIdata$RetSMI > 0, "up", ifelse(SMIdata$RetSMI < 0, "down", "no change" ))) # Including a column with up, down factors
SMIdata$SDdomBanksdir <- as.factor(ifelse(SMIdata$ChgSDdomBanks > 0, "up", ifelse(SMIdata$ChgSDdomBanks < 0, "down", "no change" )))
SMIdata$SMI.FC <- as.factor(ifelse(SMIdata$RetSMI > 0, "up", ifelse(SMIdata$RetSMI < 0, "down", "no change" ))) # Reproduce the column SMIM.Dir
SMIdata$SMI.FC[1:574] <- SMIdata$SMI.FC[2:575] # Lag the series to produce forecasts
SMIdata <-SMIdata[-575,] # delete the last row
# SPIEX data
SPIEXdata$SPIEXdir <- as.factor(ifelse(SPIEXdata$RetSPIEX > 0, "up", ifelse(SPIEXdata$RetSPIEX < 0, "down", "no change" ))) # Including a column with up, down factors
SPIEXdata$SDdomBanksdir <- as.factor(ifelse(SPIEXdata$ChgSDdomBanks > 0, "up", ifelse(SPIEXdata$ChgSDdomBanks < 0, "down", "no change" )))
SPIEXdata$SPIEX.FC <- as.factor(ifelse(SPIEXdata$RetSPIEX > 0, "up", ifelse(SPIEXdata$RetSPIEX < 0, "down", "no change" ))) # Reproduce the column SMIM.Dir
SPIEXdata$SPIEX.FC[1:574] <- SPIEXdata$SPIEX.FC[2:575] # Lag the series to produce forecasts
SPIEXdata <-SPIEXdata[-575,] # delete the last row
# SMImid data
SMIMdata$SMIdir <- as.factor(ifelse(SMIMdata$RetSMIMid > 0, "up", ifelse(SMIMdata$RetSMIMid < 0, "down", "no change" ))) # Including a column with up, down factors
SMIMdata$SDdomBanksdir <- as.factor(ifelse(SMIMdata$ChgSDdomBanks > 0, "up", ifelse(SMIMdata$ChgSDdomBanks < 0, "down", "no change" )))
SMIMdata$SMIM.FC <- as.factor(ifelse(SMIMdata$RetSMIMid > 0, "up", ifelse(SMIMdata$RetSMIMid < 0, "down", "no change" ))) # Reproduce the column SMIM.Dir
SMIMdata$SMIM.FC[1:574] <- SMIMdata$SMIM.FC[2:575] # Lag the series to produce forecasts
SMIMdata <-SMIMdata[-575,] # delete the last row
## Plotting --------------------------------------
# Indices
par(mfrow = c(3,2))
plot(dataind04$Date, dataind04$SMI, type = "l", xlab = "Date", ylab = "Index", main = "SMI") # SMI
plot(dataind04$Date, dataind04$SPIEX,  type = "l", xlab = "Date", ylab = "Index", main = "SPI Extra") # SPI Extra
plot(dataind04$Date, dataind04$SMI.Mid,  type = "l", xlab = "Date", ylab = "Index", main = "SMI Mid") # SMI Mid
plot(dataind04$Date, dataind04$SNBSD,  type = "l", xlab = "Date", ylab = "Index", main = "SNB Sight Deposits") # SNB Sight Deposits
plot(dataind04$Date, dataind04$CHF.USD,  type = "l", xlab = "Date", ylab = "Index", main = "CHF/USD Exchange rate") # CHF/USD Exchange rate
plot(dataind04$Date, dataind04$CHF.EUR,  type = "l", xlab = "Date", ylab = "Index", main = "CHF/EUR Exchange rate") # CHF/EUR Exchange rate
dev.off()
## Correlations --------------------------------------
# Indices & SNB Sight Deposits
cor.ind <- cor(dataind04[,-1], method = "spearman")
# All Variables
DataWoDates <- dataret[,-1] # Delete the Date column
Cor <- cor(DataWoDates, method = "spearman") # calculate the Correlation Matrix Spearman
# PreCapPeriods
PreCapPeriod.cor <- cor(DataWoDates[1:227,])
# During CapPeriods
CapPeriod.cor <- cor(DataWoDates[228:413, ])
# PostCapPeriod CapPeriods
PostCapPeriod.cor <- cor(DataWoDates[414:575,])
# SMI Stock indice
# Defining the Periods for the three stock indices
# Three Periods: Before, During and Post Cap (row 137 is the 16th of Jan, i.e. 1 day after the removal of the Cap)
PreCapPeriod <- SMIdata[1:227,-1] # Data set from 2008 - 02 - 08 to 2012 - 06 - 01 (PreCapPeriod phase)
CapPeriod <- SMIdata[228:413,-1] # Data set from 2012 - 06 - 08 to 2016 - 01 - 01 (CapPeriod phase)
PostCapPeriod <- SMIdata[414:575,-1] # Data set from 2016 - 01 - 08 to 2019 - 02 - 22 (PostCapPeriod CapPeriod phase)
# PreCapPeriod Model describing SMI Forecast (column 10)
PreCapPeriod.model <- C5.0(PreCapPeriod[-10], PreCapPeriod$SMI.FC, rules = TRUE)
PreCapPeriod.model
summary(PreCapPeriod.model)
# CapPeriod Model describing SMIM Forecast (column 10)
CapPeriod.model <- C5.0(CapPeriod[-10], CapPeriod$SMI.FC, rules = TRUE)
CapPeriod.model
summary(CapPeriod.model)
# PostCapPeriod Model describing SMIM Forecast (column 10)
PostCapPeriod.model <- C5.0(PostCapPeriod[-10], PostCapPeriod$SMI.FC, rules = TRUE)
PostCapPeriod.model
summary(PostCapPeriod.model)
summary(CapPeriod.model)
summary(PostCapPeriod.model)
# PostCapPeriod Model describing SMI Forecast (column 10)
PostCapPeriod.model <- C5.0(PostCapPeriod[-10], PostCapPeriod$SMI.FC, rules = TRUE, trials = 100)
PostCapPeriod.model
summary(PostCapPeriod.model)
# PreCapPeriod Model describing SMI Forecast (column 10)
PreCapPeriod.model <- C5.0(PreCapPeriod[-10], PreCapPeriod$SMI.FC, rules = TRUE, trials = 100)
PreCapPeriod.model
summary(PreCapPeriod.model)
# CapPeriod Model describing SMI Forecast (column 10)
CapPeriod.model <- C5.0(CapPeriod[-10], CapPeriod$SMI.FC, rules = TRUE, trials = 100)
CapPeriod.model
summary(CapPeriod.model)
# PostCapPeriod Model describing SMI Forecast (column 10)
PostCapPeriod.model <- C5.0(PostCapPeriod[-10], PostCapPeriod$SMI.FC, rules = TRUE, trials = 100)
PostCapPeriod.model
summary(PostCapPeriod.model)
